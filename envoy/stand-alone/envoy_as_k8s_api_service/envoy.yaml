# Envoy 代理配置文件 - 作为 Kubernetes API 服务的代理
# 此配置使 Envoy 能够代理到 Kubernetes API 服务器

# Admin 管理界面配置
admin:
  address:
    socket_address:
      address: 0.0.0.0  # 监听所有网络接口
      port_value: 9901  # Admin 界面端口，默认是 9901

# 静态资源配置部分
static_resources:

  # 监听器配置 - 定义 Envoy 监听的端口和协议
  listeners:
  # 第一个监听器配置
  - name: listener_cluster_01  # 监听器名称
    address:  # 监听地址配置
      socket_address:  # Socket 地址类型
        address: 0.0.0.0  # 监听所有网络接口
        port_value: 6443  # 监听端口 
    filter_chains:  # 过滤器链配置
    - filters:  # 过滤器列表
      # TCP 代理过滤器 - 将流量转发到后端集群
      - name: envoy.filters.network.tcp_proxy  # 过滤器名称
        typed_config:  
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy  # 过滤器类型
          stat_prefix: tcp_forward  
          cluster: k8s_cluster_01_api_service  # 目标集群名称

  # 集群配置 - 定义后端服务集群
  clusters:
  # Kubernetes API 服务集群配置
  - name: k8s_cluster_01_api_service  # 集群名称
    connect_timeout: 5s  # 连接超时时间
    type: static  
    lb_policy: ROUND_ROBIN  # 负载均衡策略

    health_checks:
    - timeout: 3s  # 健康检查超时时间
      interval: 5s  # 健康检查间隔
      unhealthy_threshold: 3  # 连续失败多少次后标记为不健康
      healthy_threshold: 2  # 连续成功多少次后标记为健康
      http_health_check:      # HTTP 健康检查，适用于 Kubernetes API
        path: "/healthz"      # Kubernetes API 健康检查端点
        request_headers_to_add:
        - header:
            key: "User-Agent"
            value: "envoy-health-checker"

    outlier_detection:
      consecutive_gateway_failure: 3 # 如果某个后端节点连续出现 3 次网关类故障（如连接被拒绝、连接超时、目标不可达等 TCP 层面异常），则该节点会被临时从负载均衡池中剔除
      enforcing_consecutive_gateway_failure: 100 # 该检测规则的“执行权重”，取值为 0~100，100 表示该规则100%生效（如果设置为 50，表示规则生效概率为50%）
      interval: 10s # Envoy 每隔 5 秒进行一次异常检测以及恢复检测（也就是多长时间检查一次所有节点的健康和剔除状态）
      base_ejection_time: 60s # 当节点被剔除后，最短被移出集群的时间为 60s（剔除时长）。如果该节点多次反复被剔除，剔除时长会递增（类似指数退避），否则 60s 后可以被重新加入
      max_ejection_percent: 100 # 一次最多能剔除的节点比例为 50%（即集群中最多有一半的节点可以被outlier_detection机制剔除），防止所有节点因误判全部下线导致无法服务。

    load_assignment:  # 负载分配配置
      cluster_name: k8s_cluster_01_api_service  # 集群名称（与上面保持一致）
      endpoints:  
      - lb_endpoints:  # 负载均衡端点
        - endpoint:
            address:  
              socket_address:  
                address: 192.168.6.149  # 后端 Kubernetes API 服务器 IP 地址
                port_value: 6443  # 后端服务端口
        - endpoint:  
            address:  
              socket_address:  
                address: 192.168.6.150  
                port_value: 6443  
        - endpoint:  
            address:  
              socket_address:  
                address: 192.168.6.151  
                port_value: 6443  